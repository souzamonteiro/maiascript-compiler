// An in-line function.
f(x) = 2 * x ** 2 + x - 1

// A simple function.
g(x) {
    return x * x
}

// An asynchronous function.
f1(x) ?= {
    return x
}

// An object constructor.
f2(x) := {
    return x
}

// A function in JavaScript.
f3(x) => /{
    y = x + 1;
    return y;
}/

// A function in WebAssembly.
i32 f4(i32 $a, i32 $b) /{
    (i32.add
      (get_local $a)
      (get_local $b)
    )
}/

// A synchronous function call.
a ?= f1(2)
// Creating an object.
b := f2(2)
// Calling a JavaScript function.
c = f3(2)
// Calling an WebAssembly function.
d = f4(1, 2)

system.println(f(2));
system.println(g(2));
system.println(a);
system.println(b);
system.println(c);
system.println(d);
